name: Build'n'Push'n'Deploy docker dev image

on:
  push:
    branches:
      - develop

env:
  KUBECONFIG: .kube/config
  KUBECONFIG_FILE: ${{ secrets.KUBECONFIG }}

jobs:
  docker:
    runs-on: ubuntu-latest
    outputs:
      docker_image: ${{ steps.set_docker_image.outputs.docker_image }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@master
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Registry
        uses: docker/login-action@v1
        with:
          registry: https://registry.micriber.com
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
      - name: Set docker image variable
        id: set_docker_image
        run: echo "::set-output name=docker_image::registry.micriber.com/fftcg-hub-api-preprod:${{ steps.package-version.outputs.current-version}}-${{ env.GITHUB_SHA }}"
      - name: Build and Push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          file: ./docker/node/Dockerfile.prod
          tags: ${{ steps.set_docker_image.outputs.docker_image }}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
  deploy-k8s:
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get kubeconfig
        run: |
          mkdir -p .kube
          echo "${{ env.KUBECONFIG_FILE }}" > $KUBECONFIG
      - name: Setup k8s tools
        uses: stefanprodan/kube-tools@v1
        with:
          kubectl: 1.18.2
          kustomize: 4.1.3
          command: |
            echo "Set image to deploy"
            cd infra/k8s/overlays/preprod && kustomize edit set image fftcg-api=${{needs.docker.outputs.docker_image}} && echo "Applying to k8s cluster" && kubectl apply -k .
