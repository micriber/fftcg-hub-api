openapi: 3.0.0
info:
    description: Manage your FFTCG collection
    version: 0.1.0
    title: FFTCG collection
servers:
    - url: http://localhost:3000/api/v1
      description: local server
paths:
    /login/google:
        post:
            tags: [login]
            summary: login with google
            requestBody:
                $ref: '#/components/requestBodies/google'
            responses:
                200:
                    $ref: '#/components/responses/user'
                201:
                    $ref: '#/components/responses/user'
                401:
                    $ref: '#/components/responses/invalidToken'
    /users/{userId}:
        get:
            tags: [user]
            summary: Find user by ID
            parameters:
                - name: userId
                  in: path
                  description: ID of user to return
                  example: 8987518b-f2bb-45e1-bbf7-4e6a35803149
                  required: true
                  schema:
                    type: string
                    format: uuid
                - $ref: '#/components/parameters/authorization'
            responses:
                200:
                    $ref: '#/components/responses/user'
                404:
                    $ref: '#/components/responses/notFound'
                400:
                    $ref: '#/components/responses/badRequest'
                401:
                    $ref: '#/components/responses/invalidToken'
components:
    schemas:
        user:
            properties:
                id:
                    type: string
                    format: uuid
                firstName:
                    type: string
                lastName:
                    type: string
                email:
                    type: string
                    format: email
                locale:
                    type: string
                userName:
                    type: string
                authenticationType:
                    type: string
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time
            example:
                id: 8987518b-f2bb-45e1-bbf7-4e6a35803149
                firstName: firstName1
                lastName: lastName1
                email: email1@gmail.com
                locale: fr
                userName: userName1
                authenticationType: google
                createdAt: 2020-08-20 23:04:53.935692
                updatedAt: 2020-08-20 23:04:53.935692
        idToken:
            properties:
                idtoken:
                    required: true
                    type: string
                    example: eyJhbGciOiJSUz...yLe9LNM85DA
                    description: Google token ID
        error:
            properties:
                message:
                    type: string
                    example:
                        - Token expiration date
                        - User not found
    requestBodies:
        google:
            description: id token from goog oauth
            required: true
            content:
                application/json:
                    example: eyJhbGciOiJSUz...yLe9LNM85DA
                    schema:
                        $ref: '#/components/schemas/idToken'
    responses:
        user:
            description: ok
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/user'
        invalidToken:
            description: invalid token
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/error'
        notFound:
            description: entity not found
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/error'
        badRequest:
            description: bad request
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/error'
    parameters:
        authorization:
            in: header
            name: authorization
            schema:
                type: string
                format: bearer
                required: true
                example: bearer eyJhbGciOiJSUz...yLe9LNM85DA
